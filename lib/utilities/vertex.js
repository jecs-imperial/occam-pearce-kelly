'use strict';

function vertexNamesFromVertices(vertices) {
  var vertexNames = vertices.map(function (vertex) {
    var vertexName = vertex.getName();

    return vertexName;
  });

  return vertexNames;
}

function topologicallyOrderVertices(vertices) {
  ///
  vertices.sort(function (firstVertex, secondVertex) {
    var firstVertexIndex = firstVertex.getIndex(),
        secondVertexIndex = secondVertex.getIndex();

    if (false) {} else if (firstVertexIndex < secondVertexIndex) {
      return -1;
    } else if (firstVertexIndex > secondVertexIndex) {
      return +1;
    }
  });

  var topologicallyOrderedVertices = vertices; ///

  return topologicallyOrderedVertices;
}

module.exports = {
  vertexNamesFromVertices: vertexNamesFromVertices,
  topologicallyOrderVertices: topologicallyOrderVertices
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2VzNi91dGlsaXRpZXMvdmVydGV4LmpzIl0sIm5hbWVzIjpbInZlcnRleE5hbWVzRnJvbVZlcnRpY2VzIiwidmVydGljZXMiLCJ2ZXJ0ZXhOYW1lcyIsIm1hcCIsInZlcnRleCIsInZlcnRleE5hbWUiLCJnZXROYW1lIiwidG9wb2xvZ2ljYWxseU9yZGVyVmVydGljZXMiLCJzb3J0IiwiZmlyc3RWZXJ0ZXgiLCJzZWNvbmRWZXJ0ZXgiLCJmaXJzdFZlcnRleEluZGV4IiwiZ2V0SW5kZXgiLCJzZWNvbmRWZXJ0ZXhJbmRleCIsInRvcG9sb2dpY2FsbHlPcmRlcmVkVmVydGljZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxTQUFTQSx1QkFBVCxDQUFpQ0MsUUFBakMsRUFBMkM7QUFDekMsTUFBTUMsY0FBY0QsU0FBU0UsR0FBVCxDQUFhLFVBQVNDLE1BQVQsRUFBaUI7QUFDaEQsUUFBTUMsYUFBYUQsT0FBT0UsT0FBUCxFQUFuQjs7QUFFQSxXQUFPRCxVQUFQO0FBQ0QsR0FKbUIsQ0FBcEI7O0FBTUEsU0FBT0gsV0FBUDtBQUNEOztBQUVELFNBQVNLLDBCQUFULENBQW9DTixRQUFwQyxFQUE4QztBQUFHO0FBQy9DQSxXQUFTTyxJQUFULENBQWMsVUFBU0MsV0FBVCxFQUFzQkMsWUFBdEIsRUFBb0M7QUFDaEQsUUFBTUMsbUJBQW1CRixZQUFZRyxRQUFaLEVBQXpCO0FBQUEsUUFDTUMsb0JBQW9CSCxhQUFhRSxRQUFiLEVBRDFCOztBQUdBLFFBQUksS0FBSixFQUFXLENBRVYsQ0FGRCxNQUVRLElBQUlELG1CQUFtQkUsaUJBQXZCLEVBQTBDO0FBQ2hELGFBQU8sQ0FBQyxDQUFSO0FBQ0QsS0FGTyxNQUVBLElBQUlGLG1CQUFtQkUsaUJBQXZCLEVBQTBDO0FBQ2hELGFBQU8sQ0FBQyxDQUFSO0FBQ0Q7QUFDRixHQVhEOztBQWFBLE1BQU1DLCtCQUErQmIsUUFBckMsQ0FkNEMsQ0FjSTs7QUFFaEQsU0FBT2EsNEJBQVA7QUFDRDs7QUFFREMsT0FBT0MsT0FBUCxHQUFpQjtBQUNmaEIsa0RBRGU7QUFFZk87QUFGZSxDQUFqQiIsImZpbGUiOiJ2ZXJ0ZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIHZlcnRleE5hbWVzRnJvbVZlcnRpY2VzKHZlcnRpY2VzKSB7XG4gIGNvbnN0IHZlcnRleE5hbWVzID0gdmVydGljZXMubWFwKGZ1bmN0aW9uKHZlcnRleCkge1xuICAgIGNvbnN0IHZlcnRleE5hbWUgPSB2ZXJ0ZXguZ2V0TmFtZSgpO1xuXG4gICAgcmV0dXJuIHZlcnRleE5hbWU7XG4gIH0pO1xuXG4gIHJldHVybiB2ZXJ0ZXhOYW1lcztcbn1cblxuZnVuY3Rpb24gdG9wb2xvZ2ljYWxseU9yZGVyVmVydGljZXModmVydGljZXMpIHsgIC8vL1xuICB2ZXJ0aWNlcy5zb3J0KGZ1bmN0aW9uKGZpcnN0VmVydGV4LCBzZWNvbmRWZXJ0ZXgpIHtcbiAgICBjb25zdCBmaXJzdFZlcnRleEluZGV4ID0gZmlyc3RWZXJ0ZXguZ2V0SW5kZXgoKSxcbiAgICAgICAgICBzZWNvbmRWZXJ0ZXhJbmRleCA9IHNlY29uZFZlcnRleC5nZXRJbmRleCgpO1xuXG4gICAgaWYgKGZhbHNlKSB7XG5cbiAgICB9IGVsc2UgIGlmIChmaXJzdFZlcnRleEluZGV4IDwgc2Vjb25kVmVydGV4SW5kZXgpIHtcbiAgICAgIHJldHVybiAtMTtcbiAgICB9IGVsc2UgIGlmIChmaXJzdFZlcnRleEluZGV4ID4gc2Vjb25kVmVydGV4SW5kZXgpIHtcbiAgICAgIHJldHVybiArMTtcbiAgICB9XG4gIH0pO1xuXG4gIGNvbnN0IHRvcG9sb2dpY2FsbHlPcmRlcmVkVmVydGljZXMgPSB2ZXJ0aWNlczsgIC8vL1xuXG4gIHJldHVybiB0b3BvbG9naWNhbGx5T3JkZXJlZFZlcnRpY2VzO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgdmVydGV4TmFtZXNGcm9tVmVydGljZXMsXG4gIHRvcG9sb2dpY2FsbHlPcmRlclZlcnRpY2VzXG59O1xuIl19